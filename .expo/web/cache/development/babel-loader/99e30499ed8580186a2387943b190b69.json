{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ExpensesOutput from \"../components/ExpensesOutput/ExpensesOutput\";\nimport { ExpensesContext } from \"../store/expenses-context\";\nimport { getDateMinusDays } from \"../util/date\";\nimport { fetchExpenses } from \"../util/http\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction RecentExpenses() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetchExpenses = _useState2[0],\n      setFetchExpenses = _useState2[1];\n\n  useEffect(function () {\n    function getExpenses() {\n      var expenses;\n      return _regeneratorRuntime.async(function getExpenses$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchExpenses());\n\n            case 2:\n              expenses = _context.sent;\n              setFetchExpenses(expenses);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getExpenses();\n  }, [fetchExpenses]);\n  var recentExpenses = fetchExpenses.filter(function (expense) {\n    var today = new Date();\n    var date7DaysAgo = getDateMinusDays(today, 7);\n    return expense.date >= date7DaysAgo && expense.date <= today;\n  });\n  return _jsx(ExpensesOutput, {\n    expenses: recentExpenses,\n    expensesPeriod: \"Last 7 Days\",\n    fallbackText: \"No expenses registered for the last 7 days.\"\n  });\n}\n\nexport default RecentExpenses;","map":{"version":3,"sources":["D:/ReactNative/10 http/react-native/screens/RecentExpenses.js"],"names":["useContext","useEffect","useState","ExpensesOutput","ExpensesContext","getDateMinusDays","fetchExpenses","RecentExpenses","setFetchExpenses","getExpenses","expenses","recentExpenses","filter","expense","today","Date","date7DaysAgo","date"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AAEA,OAAOC,cAAP;AACA,SAASC,eAAT;AACA,SAASC,gBAAT;AACA,SAASC,aAAT;;;AAEA,SAASC,cAAT,GAA0B;AAExB,kBAA0CL,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOI,aAAP;AAAA,MAAsBE,gBAAtB;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeQ,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBH,aAAa,EADtC;;AAAA;AACQI,cAAAA,QADR;AAEEF,cAAAA,gBAAgB,CAACE,QAAD,CAAhB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIAD,IAAAA,WAAW;AACZ,GANQ,EAMN,CAACH,aAAD,CANM,CAAT;AAQA,MAAMK,cAAc,GAAGL,aAAa,CAACM,MAAd,CAAqB,UAAAC,OAAO,EAAI;AACrD,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,YAAY,GAAGX,gBAAgB,CAACS,KAAD,EAAQ,CAAR,CAArC;AAEA,WAAOD,OAAO,CAACI,IAAR,IAAgBD,YAAhB,IAAgCH,OAAO,CAACI,IAAR,IAAgBH,KAAvD;AACD,GALsB,CAAvB;AAOA,SACE,KAAC,cAAD;AACE,IAAA,QAAQ,EAAEH,cADZ;AAEE,IAAA,cAAc,EAAC,aAFjB;AAGE,IAAA,YAAY,EAAC;AAHf,IADF;AAOD;;AAED,eAAeJ,cAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\n\nimport ExpensesOutput from \"../components/ExpensesOutput/ExpensesOutput\";\nimport { ExpensesContext } from \"../store/expenses-context\";\nimport { getDateMinusDays } from \"../util/date\";\nimport { fetchExpenses } from \"../util/http\";\n\nfunction RecentExpenses() {\n  // const expensesCtx = useContext(ExpensesContext);\n  const [fetchExpenses, setFetchExpenses] = useState([]);\n\n  useEffect(() => {\n    async function getExpenses() {\n      const expenses = await fetchExpenses();\n      setFetchExpenses(expenses);\n    }\n    getExpenses();\n  }, [fetchExpenses]);\n\n  const recentExpenses = fetchExpenses.filter(expense => {\n    const today = new Date();\n    const date7DaysAgo = getDateMinusDays(today, 7);\n\n    return expense.date >= date7DaysAgo && expense.date <= today;\n  });\n\n  return (\n    <ExpensesOutput\n      expenses={recentExpenses}\n      expensesPeriod=\"Last 7 Days\"\n      fallbackText=\"No expenses registered for the last 7 days.\"\n    />\n  );\n}\n\nexport default RecentExpenses;\n"]},"metadata":{},"sourceType":"module"}