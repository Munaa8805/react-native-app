{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useLayoutEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ExpenseForm from \"../components/ManageExpense/ExpenseForm\";\nimport Button from \"../components/UI/Button\";\nimport IconButton from \"../components/UI/IconButton\";\nimport { GlobalStyles } from \"../constants/styles\";\nimport { ExpensesContext } from \"../store/expenses-context\";\nimport { storeExpense, updateExpense, deleteExpense } from \"../util/http\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ManageExpense(_ref) {\n  var _route$params;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var expensesCtx = useContext(ExpensesContext);\n  var editedExpenseId = (_route$params = route.params) == null ? void 0 : _route$params.expenseId;\n  var isEditing = !!editedExpenseId;\n  var selectedExpense = expensesCtx.expenses.find(function (expense) {\n    return expense.id === editedExpenseId;\n  });\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: isEditing ? \"Edit Expense\" : \"Add Expense\"\n    });\n  }, [navigation, isEditing]);\n\n  function deleteExpenseHandler() {\n    return _regeneratorRuntime.async(function deleteExpenseHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsSubmitting(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(deleteExpense(editedExpenseId));\n\n          case 3:\n            expensesCtx.deleteExpense(editedExpenseId);\n            navigation.goBack();\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function cancelHandler() {\n    navigation.goBack();\n  }\n\n  function confirmHandler(expenseData) {\n    var id;\n    return _regeneratorRuntime.async(function confirmHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!isEditing) {\n              _context2.next = 6;\n              break;\n            }\n\n            expensesCtx.updateExpense(editedExpenseId, expenseData);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(updateExpense(editedExpenseId, expenseData));\n\n          case 4:\n            _context2.next = 10;\n            break;\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(storeExpense(expenseData));\n\n          case 8:\n            id = _context2.sent;\n            expensesCtx.addExpense(_objectSpread(_objectSpread({}, expenseData), {}, {\n              id: id\n            }));\n\n          case 10:\n            navigation.goBack();\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ExpenseForm, {\n      submitButtonLabel: isEditing ? \"Update\" : \"Add\",\n      onSubmit: confirmHandler,\n      onCancel: cancelHandler,\n      defaultValues: selectedExpense\n    }), isEditing && _jsx(View, {\n      style: styles.deleteContainer,\n      children: _jsx(IconButton, {\n        icon: \"trash\",\n        color: GlobalStyles.colors.error500,\n        size: 36,\n        onPress: deleteExpenseHandler\n      })\n    })]\n  });\n}\n\nexport default ManageExpense;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    backgroundColor: GlobalStyles.colors.primary800\n  },\n  deleteContainer: {\n    marginTop: 16,\n    paddingTop: 8,\n    borderTopWidth: 2,\n    borderTopColor: GlobalStyles.colors.primary200,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/ReactNative/10 http/react-native/screens/ManageExpense.js"],"names":["useContext","useLayoutEffect","useState","ExpenseForm","Button","IconButton","GlobalStyles","ExpensesContext","storeExpense","updateExpense","deleteExpense","ManageExpense","route","navigation","isSubmitting","setIsSubmitting","expensesCtx","editedExpenseId","params","expenseId","isEditing","selectedExpense","expenses","find","expense","id","setOptions","title","deleteExpenseHandler","goBack","cancelHandler","confirmHandler","expenseData","addExpense","styles","container","deleteContainer","colors","error500","StyleSheet","create","flex","padding","backgroundColor","primary800","marginTop","paddingTop","borderTopWidth","borderTopColor","primary200","alignItems"],"mappings":"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","sourcesContent":["import { useContext, useLayoutEffect, useState } from \"react\";\nimport { StyleSheet, TextInput, View } from \"react-native\";\n\nimport ExpenseForm from \"../components/ManageExpense/ExpenseForm\";\nimport Button from \"../components/UI/Button\";\nimport IconButton from \"../components/UI/IconButton\";\nimport { GlobalStyles } from \"../constants/styles\";\nimport { ExpensesContext } from \"../store/expenses-context\";\nimport { storeExpense, updateExpense, deleteExpense } from \"../util/http\";\n\nfunction ManageExpense({ route, navigation }) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const expensesCtx = useContext(ExpensesContext);\n\n  const editedExpenseId = route.params?.expenseId;\n  const isEditing = !!editedExpenseId;\n\n  const selectedExpense = expensesCtx.expenses.find(\n    expense => expense.id === editedExpenseId\n  );\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: isEditing ? \"Edit Expense\" : \"Add Expense\"\n    });\n  }, [navigation, isEditing]);\n\n  async function deleteExpenseHandler() {\n    setIsSubmitting(true);\n    await deleteExpense(editedExpenseId);\n    expensesCtx.deleteExpense(editedExpenseId);\n\n    navigation.goBack();\n  }\n\n  function cancelHandler() {\n    navigation.goBack();\n  }\n\n  async function confirmHandler(expenseData) {\n    if (isEditing) {\n      expensesCtx.updateExpense(editedExpenseId, expenseData);\n      await updateExpense(editedExpenseId, expenseData);\n    } else {\n      const id = await storeExpense(expenseData);\n      expensesCtx.addExpense({ ...expenseData, id: id });\n    }\n    navigation.goBack();\n  }\n\n  return (\n    <View style={styles.container}>\n      <ExpenseForm\n        submitButtonLabel={isEditing ? \"Update\" : \"Add\"}\n        onSubmit={confirmHandler}\n        onCancel={cancelHandler}\n        defaultValues={selectedExpense}\n      />\n      {isEditing && (\n        <View style={styles.deleteContainer}>\n          <IconButton\n            icon=\"trash\"\n            color={GlobalStyles.colors.error500}\n            size={36}\n            onPress={deleteExpenseHandler}\n          />\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default ManageExpense;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    backgroundColor: GlobalStyles.colors.primary800\n  },\n  deleteContainer: {\n    marginTop: 16,\n    paddingTop: 8,\n    borderTopWidth: 2,\n    borderTopColor: GlobalStyles.colors.primary200,\n    alignItems: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}